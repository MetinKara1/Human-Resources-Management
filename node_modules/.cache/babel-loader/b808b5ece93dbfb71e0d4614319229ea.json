{"ast":null,"code":"import _slicedToArray from \"/Users/metinkara/Documents/Human-Resources-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metinkara/Documents/Human-Resources-Management/src/components/Table.tsx\";\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchBar from './SearchBar';\nimport TablePagination from './TablePagination';\nconst styles = {\n  table: {\n    fontFamily: 'arial, sans-serif',\n    borderCollapse: 'collapse',\n    width: '100%'\n  }\n};\n\nconst Table = props => {\n  const renderRow = props.renderRow,\n        entries = props.entries,\n        header = props.header,\n        classes = props.classes,\n        _props$placeholder = props.placeholder,\n        placeholder = _props$placeholder === void 0 ? '' : _props$placeholder,\n        _props$textfilterOpti = props.textfilterOptions,\n        textfilterOptions = _props$textfilterOpti === void 0 ? [] : _props$textfilterOpti,\n        _props$pageLimit = props.pageLimit,\n        pageLimit = _props$pageLimit === void 0 ? 10 : _props$pageLimit;\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        filter = _useState2[0],\n        setFilter = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        page = _useState4[0],\n        setPage = _useState4[1];\n\n  const doesIncludeEntry = entry => {\n    return filter.length > 0 ? textfilterOptions.filter(option => entry[option].toLowerCase().includes(filter.toLowerCase())).length > 0 : true;\n  };\n\n  const getPaginatedEntries = entries => {\n    const offset = page * pageLimit;\n    return entries.slice(offset, offset + pageLimit);\n  };\n\n  const getFilteredEntries = () => {\n    const data = entries.filter(entry => doesIncludeEntry(entry));\n    console.log('entry: ', data);\n    return data;\n  };\n\n  const renderEntries = () => {\n    return getPaginatedEntries(getFilteredEntries());\n  };\n\n  console.log('renderEntries: ', renderEntries);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(SearchBar, {\n    setValue: setFilter,\n    placeholder: placeholder,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, renderEntries().map(entry => renderRow(entry))), React.createElement(TablePagination, {\n    pageLimit: pageLimit,\n    pages: getFilteredEntries().length,\n    currentPage: page,\n    setPage: setPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default withStyles(styles)(Table);","map":{"version":3,"sources":["/Users/metinkara/Documents/Human-Resources-Management/src/components/Table.tsx"],"names":["React","useState","withStyles","SearchBar","TablePagination","styles","table","fontFamily","borderCollapse","width","Table","props","renderRow","entries","header","classes","placeholder","textfilterOptions","pageLimit","filter","setFilter","page","setPage","doesIncludeEntry","entry","length","option","toLowerCase","includes","getPaginatedEntries","offset","slice","getFilteredEntries","data","console","log","renderEntries","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport SearchBar from './SearchBar';\nimport TablePagination from './TablePagination';\n\nconst styles: any = {\n  table: {\n    fontFamily: 'arial, sans-serif',\n    borderCollapse: 'collapse',\n    width: '100%'\n  }\n};\n\ninterface Props {\n  renderRow: any;\n  entries: any;\n  header: any;\n  classes: any;\n  placeholder: string;\n  textfilterOptions: any;\n  pageLimit: number;\n}\n\nconst Table = (props: Props) => {\n  const { renderRow, entries, header, classes, placeholder = '', textfilterOptions = [], pageLimit = 10 } = props;\n  const [filter, setFilter] = useState('');\n  const [page, setPage] = useState(0);\n\n  const doesIncludeEntry = (entry: any) => {\n    return filter.length > 0 ? textfilterOptions.filter((option: any) => entry[option].toLowerCase().includes(filter.toLowerCase())).length > 0 : true;\n  };\n\n  const getPaginatedEntries = (entries: any) => {\n    const offset = page * pageLimit;\n    return entries.slice(offset, offset + pageLimit);\n  }\n\n  const getFilteredEntries = () => {\n    const data = entries.filter((entry: any) => doesIncludeEntry(entry));\n    console.log('entry: ', data);\n    return data;\n  }\n\n  const renderEntries = () => {\n    return getPaginatedEntries(getFilteredEntries());\n  }\n  console.log('renderEntries: ', renderEntries);\n  return (\n    <div>\n      <SearchBar \n        setValue={setFilter}\n        placeholder={placeholder}\n      />\n      {/* className={classes.table} */}\n      <table> \n        {/* {header} */}\n        {renderEntries().map((entry: any) => renderRow(entry))}\n      </table>\n      <TablePagination \n        pageLimit={pageLimit}\n        pages={getFilteredEntries().length}\n        currentPage={page}\n        setPage={setPage}\n      />\n    </div>\n  )\n}\n\nexport default withStyles(styles)(Table);"]},"metadata":{},"sourceType":"module"}