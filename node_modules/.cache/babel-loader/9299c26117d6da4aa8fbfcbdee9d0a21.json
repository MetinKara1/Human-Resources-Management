{"ast":null,"code":"import _slicedToArray from \"/Users/metinkara/Documents/Human-Resources-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metinkara/Documents/Human-Resources-Management/src/pages/Candidates/views/Candidates.tsx\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"../../../config/store\";\nimport { navigate } from \"../../Services/action\"; // import { login, changeEmail, changePassword } from \"../logic/action\";\n\nimport { setLayoutOptions } from \"../../../layout/Layout\";\nimport { getCandidates } from \"../logic/action\";\nimport Table from '../../../components/Table';\nimport { STATES_ABBR } from '../../../config/constant';\n\nconst Candidates = () => {\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showLoader = _useState2[0],\n        setLoader = _useState2[1];\n\n  const _useState3 = useState('all'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genreFilter = _useState4[0],\n        setGenreFilter = _useState4[1];\n\n  const _useState5 = useState('all'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stateFilter = _useState6[0],\n        setStateFilter = _useState6[1];\n\n  const candidates = useSelector(state => state.candidates.candidates);\n  console.log(\"candidates: \", candidates); //   const onEmailChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changeEmail(e.currentTarget.value));\n  //   }, []);\n  //   const onPasswordChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changePassword(e.currentTarget.value));\n  //   }, []);\n  //   const onLoginClick = useCallback(() => {\n  //     setLoader(true);\n  //     dispatch(login());\n  //   }, []);\n\n  useEffect(() => {\n    console.log(\"çalıoştıı\");\n    dispatch(getCandidates());\n  }, []);\n  const onNavigateRegister = useCallback(() => {\n    dispatch(navigate(\"Register\"));\n  }, []);\n  const tableHeaders = [\"Ad\", \"Soyad\", \"Telefon\", \"Detay\"];\n\n  const renderRow = data => {\n    // console.log(\"data: \", data);\n    return React.createElement(React.Fragment, null, data && data.length && data.map(item => {\n      return React.createElement(\"tr\", {\n        key: item.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, item.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, item.username), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, item.phone), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => navigate(\"CandidateDetail\", ...[\"\".concat(item.id)]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Detay\"));\n    })); // return <div>test</div>\n  };\n\n  const renderTable = data => {\n    return React.createElement(\"table\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, tableHeaders.map(item => React.createElement(\"th\", {\n      style: {\n        border: \"1px solid black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, item, \" \", React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Filtre\"))))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, renderRow(data)));\n  };\n\n  const generateRow = row => {\n    return React.createElement(\"tr\", {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, tableHeaders.map(field => React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, row[field.id])));\n  };\n\n  const headerOptions = [{\n    id: \"name\"\n  }, {\n    id: \"city\"\n  }, {\n    id: \"state\",\n    filterOptions: () => renderDropdown(stateFilter, e => setStateFilter(e.target.value), renderStateOptions())\n  }, {\n    id: \"telephone\"\n  }, {\n    id: \"genre\",\n    filterOptions: () => renderDropdown(genreFilter, e => setGenreFilter(e.target.value), renderGenreOptions())\n  }];\n\n  const renderDropdown = (currentVal, changeFunc, options) => {\n    return React.createElement(\"select\", {\n      value: currentVal,\n      onChange: changeFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, options.map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, option)));\n  };\n\n  const renderStateOptions = () => ['all', ...STATES_ABBR];\n\n  const renderGenreOptions = () => {\n    return candidates.reduce((acc, val) => {\n      const genres = val.genre.split(',');\n      return Array.from(new Set([...acc, ...genres]));\n    }, ['all']);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"\",\n    style: {\n      margin: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, \"Candidates\"), React.createElement(Table, {\n    renderRow: row => generateRow(row),\n    entries: candidates,\n    header: headerOptions,\n    placeholder: \"Search by name, city, genre\",\n    textfilterOptions: [\"name\", \"username\", \"email\"],\n    pageLimit: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }), showLoader && React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }))));\n};\n\nsetLayoutOptions(Candidates, {\n  layout: \"MainLayout\"\n});\nexport default Candidates;","map":{"version":3,"sources":["/Users/metinkara/Documents/Human-Resources-Management/src/pages/Candidates/views/Candidates.tsx"],"names":["React","useCallback","useState","useEffect","useDispatch","useSelector","navigate","setLayoutOptions","getCandidates","Table","STATES_ABBR","Candidates","dispatch","showLoader","setLoader","genreFilter","setGenreFilter","stateFilter","setStateFilter","candidates","state","console","log","onNavigateRegister","tableHeaders","renderRow","data","length","map","item","id","name","username","phone","renderTable","border","generateRow","row","field","headerOptions","filterOptions","renderDropdown","e","target","value","renderStateOptions","renderGenreOptions","currentVal","changeFunc","options","option","reduce","acc","val","genres","genre","split","Array","from","Set","margin","layout"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAAwCC,QAAxC,EAAkDC,SAAlD,QAAmE,OAAnE;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,uBAAzC;AACA,SAASC,QAAT,QAAyB,uBAAzB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AADuB,oBAGSF,QAAQ,CAAC,KAAD,CAHjB;AAAA;AAAA,QAGhBW,UAHgB;AAAA,QAGJC,SAHI;;AAAA,qBAKeZ,QAAQ,CAAC,KAAD,CALvB;AAAA;AAAA,QAKhBa,WALgB;AAAA,QAKHC,cALG;;AAAA,qBAMed,QAAQ,CAAC,KAAD,CANvB;AAAA;AAAA,QAMhBe,WANgB;AAAA,QAMHC,cANG;;AAQvB,QAAMC,UAAU,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACD,UAAN,CAAiBA,UAA7B,CAA9B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BH,UAA5B,EATuB,CAUvB;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAV,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMe,kBAAkB,GAAGtB,WAAW,CAAC,MAAM;AAC3CW,IAAAA,QAAQ,CAACN,QAAQ,CAAC,UAAD,CAAT,CAAR;AACD,GAFqC,EAEnC,EAFmC,CAAtC;AAIA,QAAMkB,YAAY,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,SAAhB,EAA2B,OAA3B,CAArB;;AACA,QAAMC,SAAS,GAAIC,IAAD,IAAe;AAC/B;AACA,WACE,0CACGA,IAAI,IACHA,IAAI,CAACC,MADN,IAECD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAe;AACtB,aACE;AAAI,QAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACE,IAAV,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,IAAI,CAACG,QAAV,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,IAAI,CAACI,KAAV,CAHF,EAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAM3B,QAAQ,CAAC,iBAAD,EAAoB,GAAG,WAAIuB,IAAI,CAACC,EAAT,EAAvB,CAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF;AAaD,KAdD,CAHJ,CADF,CAF+B,CAuB/B;AACD,GAxBD;;AAyBA,QAAMI,WAAW,GAAIR,IAAD,IAAe;AACjC,WACE;AAAO,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEA,QAAAA,MAAM,EAAE;AAAV,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGX,YAAY,CAACI,GAAb,CAAkBC,IAAD,IAChB;AACE,MAAA,KAAK,EAAE;AACLM,QAAAA,MAAM,EAAE;AADH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGN,IALH,OAKS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALT,CADD,CADH,CADF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQJ,SAAS,CAACC,IAAD,CAAjB,CAdF,CADF;AAkBD,GAnBD;;AAqBA,QAAMU,WAAW,GAAIC,GAAD,IAAc;AAChC,WACE;AAAI,MAAA,GAAG,EAAEA,GAAG,CAACP,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,YAAY,CAACI,GAAb,CAAkBU,KAAD,IAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,GAAG,CAACC,KAAK,CAACR,EAAP,CADN,CADD,CADH,CADF;AASD,GAVD;;AAYA,QAAMS,aAAa,GAAG,CACpB;AACET,IAAAA,EAAE,EAAE;AADN,GADoB,EAIpB;AACEA,IAAAA,EAAE,EAAE;AADN,GAJoB,EAOpB;AACEA,IAAAA,EAAE,EAAE,OADN;AAEEU,IAAAA,aAAa,EAAE,MAAMC,cAAc,CAACxB,WAAD,EAAeyB,CAAD,IAAYxB,cAAc,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC,EAA0DC,kBAAkB,EAA5E;AAFrC,GAPoB,EAWpB;AACEf,IAAAA,EAAE,EAAE;AADN,GAXoB,EAcpB;AACEA,IAAAA,EAAE,EAAE,OADN;AAEEU,IAAAA,aAAa,EAAE,MAAMC,cAAc,CAAC1B,WAAD,EAAe2B,CAAD,IAAY1B,cAAc,CAAC0B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC,EAA0DE,kBAAkB,EAA5E;AAFrC,GAdoB,CAAtB;;AAmBE,QAAML,cAAc,GAAG,CAACM,UAAD,EAAkBC,UAAlB,EAAmCC,OAAnC,KAAoD;AACzE,WACE;AAAQ,MAAA,KAAK,EAAEF,UAAf;AAA2B,MAAA,QAAQ,EAAEC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,CAACrB,GAAR,CAAasB,MAAD,IAAiB;AAAQ,MAAA,KAAK,EAAEA,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,MAAxB,CAA7B,CADH,CADF;AAKD,GAND;;AAQA,QAAML,kBAAkB,GAAG,MAAM,CAAC,KAAD,EAAQ,GAAGnC,WAAX,CAAjC;;AAEA,QAAMoC,kBAAkB,GAAG,MAAM;AAC/B,WAAO3B,UAAU,CAACgC,MAAX,CAAkB,CAACC,GAAD,EAAWC,GAAX,KAAwB;AAC/C,YAAMC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAUC,KAAV,CAAgB,GAAhB,CAAf;AACA,aAAOC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQ,CAAC,GAAGP,GAAJ,EAAS,GAAGE,MAAZ,CAAR,CAAX,CAAP;AACD,KAHM,EAGJ,CAAC,KAAD,CAHI,CAAP;AAID,GALD;;AAOF,SACE;AAAM,IAAA,SAAS,EAAC,EAAhB;AAAmB,IAAA,KAAK,EAAE;AAAEM,MAAAA,MAAM,EAAE;AAAV,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAKE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAGvB,GAAD,IAAcD,WAAW,CAACC,GAAD,CADtC;AAEE,IAAA,OAAO,EAAElB,UAFX;AAGE,IAAA,MAAM,EAAEoB,aAHV;AAIE,IAAA,WAAW,EAAC,6BAJd;AAKE,IAAA,iBAAiB,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,CALrB;AAME,IAAA,SAAS,EAAE,EANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAcG1B,UAAU,IACT;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAfJ,CADF;AAwBD,CAvJD;;AAyJAN,gBAAgB,CAACI,UAAD,EAAa;AAC3BkD,EAAAA,MAAM,EAAE;AADmB,CAAb,CAAhB;AAGA,eAAelD,UAAf","sourcesContent":["import React, { useCallback, FormEvent, useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"../../../config/store\";\nimport { navigate } from \"../../Services/action\";\n// import { login, changeEmail, changePassword } from \"../logic/action\";\nimport { setLayoutOptions } from \"../../../layout/Layout\";\nimport { getCandidates } from \"../logic/action\";\nimport Table from '../../../components/Table';\nimport { STATES_ABBR } from '../../../config/constant';\n\nconst Candidates = () => {\n  const dispatch = useDispatch();\n\n  const [showLoader, setLoader] = useState(false);\n\n  const [genreFilter, setGenreFilter] = useState('all');\n  const [stateFilter, setStateFilter] = useState('all');\n\n  const candidates = useSelector((state) => state.candidates.candidates);\n  console.log(\"candidates: \", candidates);\n  //   const onEmailChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changeEmail(e.currentTarget.value));\n  //   }, []);\n\n  //   const onPasswordChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changePassword(e.currentTarget.value));\n  //   }, []);\n\n  //   const onLoginClick = useCallback(() => {\n  //     setLoader(true);\n  //     dispatch(login());\n  //   }, []);\n\n  useEffect(() => {\n    console.log(\"çalıoştıı\");\n    dispatch(getCandidates());\n  }, []);\n\n  const onNavigateRegister = useCallback(() => {\n    dispatch(navigate(\"Register\"));\n  }, []);\n\n  const tableHeaders = [\"Ad\", \"Soyad\", \"Telefon\", \"Detay\"];\n  const renderRow = (data: any) => {\n    // console.log(\"data: \", data);\n    return (\n      <>\n        {data &&\n          data.length &&\n          data.map((item: any) => {\n            return (\n              <tr key={item.id}>\n                <td>{item.name}</td>\n                <td>{item.username}</td>\n                <td>{item.phone}</td>\n                <button\n                  type=\"button\"\n                  onClick={() => navigate(\"CandidateDetail\", ...[`${item.id}`])}\n                >\n                  Detay\n                </button>\n              </tr>\n            );\n          })}\n      </>\n    );\n    // return <div>test</div>\n  };\n  const renderTable = (data: any) => {\n    return (\n      <table style={{ border: \"1px solid black\" }}>\n        <thead>\n          <tr style={{ border: \"1px solid black\" }}>\n            {tableHeaders.map((item) => (\n              <th\n                style={{\n                  border: \"1px solid black\",\n                }}\n              >\n                {item} <span>Filtre</span>\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>{renderRow(data)}</tbody>\n      </table>\n    );\n  };\n\n  const generateRow = (row: any) => {\n    return (\n      <tr key={row.id}>\n        {tableHeaders.map((field: any) => (\n          <td>\n            {row[field.id]}\n          </td>\n        ))}\n      </tr>\n    )\n  };\n\n  const headerOptions = [\n    {\n      id: \"name\"\n    },\n    {\n      id: \"city\"\n    },\n    {\n      id: \"state\",\n      filterOptions: () => renderDropdown(stateFilter, (e: any) => setStateFilter(e.target.value), renderStateOptions())\n    },\n    {\n      id: \"telephone\"\n    },\n    {\n      id: \"genre\",\n      filterOptions: () => renderDropdown(genreFilter, (e: any) => setGenreFilter(e.target.value), renderGenreOptions())\n    }];\n\n    const renderDropdown = (currentVal: any, changeFunc: any, options: any) => {\n      return (\n        <select value={currentVal} onChange={changeFunc}>\n          {options.map((option: any) => <option value={option}>{option}</option>)}\n        </select>\n      )\n    };\n\n    const renderStateOptions = () => ['all', ...STATES_ABBR];\n\n    const renderGenreOptions = () => {\n      return candidates.reduce((acc: any, val: any) => {\n        const genres = val.genre.split(',');\n        return Array.from(new Set([...acc, ...genres]));\n      }, ['all'])\n    };\n\n  return (\n    <form className=\"\" style={{ margin: 100 }}>\n      <h2>Candidates</h2>\n\n      {/* <div>{renderTable(candidates)}</div> */}\n\n      <Table\n        renderRow={(row: any) => generateRow(row)}\n        entries={candidates}\n        header={headerOptions}\n        placeholder=\"Search by name, city, genre\"\n        textfilterOptions={[\"name\", \"username\", \"email\"]}\n        pageLimit={10}\n      />\n\n      {showLoader && (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"loader\"></div>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nsetLayoutOptions(Candidates, {\n  layout: \"MainLayout\",\n});\nexport default Candidates;\n"]},"metadata":{},"sourceType":"module"}