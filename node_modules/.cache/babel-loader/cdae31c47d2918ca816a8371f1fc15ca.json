{"ast":null,"code":"import _slicedToArray from \"/Users/metinkara/Documents/Human-Resources-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metinkara/Documents/Human-Resources-Management/src/pages/Candidates/views/Candidates.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"../../../config/store\";\nimport { navigate } from \"../../Services/action\";\nimport { getCandidates } from \"../logic/action\";\nimport Table from \"../../../components/Table\";\nimport { STATES_ABBR } from \"../../../config/constant\";\n\nconst Candidates = () => {\n  const dispatch = useDispatch();\n\n  const _useState = useState(\"all\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        genreFilter = _useState2[0],\n        setGenreFilter = _useState2[1];\n\n  const _useState3 = useState(\"all\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        stateFilter = _useState4[0],\n        setStateFilter = _useState4[1];\n\n  const candidates = useSelector(state => state.candidates.candidates);\n  useEffect(() => {\n    dispatch(getCandidates());\n  }, []);\n\n  const generateRow = row => {\n    return React.createElement(\"tr\", {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, headerOptions.map(field => React.createElement(React.Fragment, null, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, row[field.id]))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => navigate(\"CandidateDetail\", ...[\"\".concat(row.id)]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Detay\")));\n  };\n\n  const headerOptions = [{\n    id: \"name\"\n  }, {\n    id: \"username\"\n  }, {\n    id: \"email\",\n    filterOptions: () => renderDropdown(stateFilter, e => setStateFilter(e.target.value), renderStateOptions())\n  }, {\n    id: \"phone\"\n  }, {\n    id: \"detay\",\n    filterOptions: () => renderDropdown(genreFilter, e => setGenreFilter(e.target.value), renderGenreOptions()),\n    onClick: item => navigate(\"CandidateDetail\", ...[\"\".concat(item.id)])\n  }];\n\n  const renderDropdown = (currentVal, changeFunc, options) => {\n    return React.createElement(\"select\", {\n      value: currentVal,\n      onChange: changeFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, options.map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, option)));\n  };\n\n  const renderStateOptions = () => [\"all\", ...STATES_ABBR];\n\n  const renderGenreOptions = () => {\n    return candidates.reduce((acc, val) => {\n      const genres = val.genre.split(\",\");\n      return Array.from(new Set([...acc, ...genres]));\n    }, [\"all\"]);\n  };\n\n  const header = React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, headerOptions.map(header => React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, header.id)));\n  return React.createElement(\"form\", {\n    className: \"\",\n    style: {\n      margin: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Candidates\"), React.createElement(Table, {\n    renderRow: row => generateRow(row),\n    entries: candidates,\n    header: header,\n    placeholder: \"Search by name, username, email, phone\",\n    textfilterOptions: [\"name\", \"username\", \"email\"],\n    pageLimit: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }));\n};\n\nexport default Candidates;","map":{"version":3,"sources":["/Users/metinkara/Documents/Human-Resources-Management/src/pages/Candidates/views/Candidates.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","navigate","getCandidates","Table","STATES_ABBR","Candidates","dispatch","genreFilter","setGenreFilter","stateFilter","setStateFilter","candidates","state","generateRow","row","id","headerOptions","map","field","filterOptions","renderDropdown","e","target","value","renderStateOptions","renderGenreOptions","onClick","item","currentVal","changeFunc","options","option","reduce","acc","val","genres","genre","split","Array","from","Set","header","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"../../../config/store\";\nimport { navigate } from \"../../Services/action\";\nimport { getCandidates } from \"../logic/action\";\nimport Table from \"../../../components/Table\";\nimport { STATES_ABBR } from \"../../../config/constant\";\n\nconst Candidates = () => {\n  const dispatch = useDispatch();\n\n  const [genreFilter, setGenreFilter] = useState(\"all\");\n  const [stateFilter, setStateFilter] = useState(\"all\");\n\n  const candidates = useSelector((state) => state.candidates.candidates);\n\n  useEffect(() => {\n    dispatch(getCandidates());\n  }, []);\n\n\n  const generateRow = (row: any) => {\n    return (\n      <tr key={row.id}>\n        {headerOptions.map((field: any) => (\n          <>\n            <td>{row[field.id]}</td>\n          </>\n        ))}\n        <td>\n          <button onClick={() => navigate(\"CandidateDetail\", ...[`${row.id}`])}>\n            Detay\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  const headerOptions = [\n    {\n      id: \"name\",\n    },\n    {\n      id: \"username\",\n    },\n    {\n      id: \"email\",\n      filterOptions: () =>\n        renderDropdown(\n          stateFilter,\n          (e: any) => setStateFilter(e.target.value),\n          renderStateOptions()\n        ),\n    },\n    {\n      id: \"phone\",\n    },\n    {\n      id: \"detay\",\n      filterOptions: () =>\n        renderDropdown(\n          genreFilter,\n          (e: any) => setGenreFilter(e.target.value),\n          renderGenreOptions()\n        ),\n      onClick: (item: any) => navigate(\"CandidateDetail\", ...[`${item.id}`]),\n    },\n  ];\n\n  const renderDropdown = (currentVal: any, changeFunc: any, options: any) => {\n    return (\n      <select value={currentVal} onChange={changeFunc}>\n        {options.map((option: any) => (\n          <option value={option}>{option}</option>\n        ))}\n      </select>\n    );\n  };\n\n  const renderStateOptions = () => [\"all\", ...STATES_ABBR];\n\n  const renderGenreOptions = () => {\n    return candidates.reduce(\n      (acc: any, val: any) => {\n        const genres = val.genre.split(\",\");\n        return Array.from(new Set([...acc, ...genres]));\n      },\n      [\"all\"]\n    );\n  };\n\n  const header = (\n    <tr>\n      {headerOptions.map((header) => (\n        <th>\n          {header.id}\n          {/* {header.filterOptions && <div>{header.filterOptions()}</div>} */}\n        </th>\n      ))}\n    </tr>\n  );\n\n  return (\n    <form className=\"\" style={{ margin: 100 }}>\n      <h2>Candidates</h2>\n\n      <Table\n        renderRow={(row: any) => generateRow(row)}\n        entries={candidates}\n        header={header}\n        placeholder=\"Search by name, username, email, phone\"\n        textfilterOptions={[\"name\", \"username\", \"email\"]}\n        pageLimit={10}\n      />\n    </form>\n  );\n};\n\nexport default Candidates;\n"]},"metadata":{},"sourceType":"module"}