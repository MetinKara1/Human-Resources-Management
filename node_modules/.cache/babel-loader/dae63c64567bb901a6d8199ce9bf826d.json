{"ast":null,"code":"import _slicedToArray from \"/Users/metinkara/Documents/Human-Resources-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metinkara/Documents/Human-Resources-Management/src/layout/Layout.tsx\";\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from '../config/store';\nimport { history } from '../config/router';\nimport MainLayout from './MainLayout';\n\nconst Layout = props => {\n  const Component = props.Component;\n  const dispatch = useDispatch(); //const isLoggedIn = useSelector((state) => state.storage.isLoggedIn);\n\n  const _useState = useState(history.location.pathname),\n        _useState2 = _slicedToArray(_useState, 2),\n        pathname = _useState2[0],\n        setPathname = _useState2[1];\n\n  useEffect(() => {\n    const unsubscribe = history.listen(location => {\n      //dispatch(clearAlert());\n      setPathname(location.pathname);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  const pick = useMemo(() => (forCreate, forUpdate) => {\n    return pathname.toLowerCase().includes('edit') ? forUpdate : forCreate;\n  }, [pathname]);\n  const title = useMemo(() => {\n    const o = props.layoutOptions.title;\n    return o !== undefined ? typeof o === 'function' ? o(pick) : o : 'ðŸ’€ - ðŸ’¥ No title here!';\n  }, [props.layoutOptions.title, pick]);\n  const layout = useMemo(() => {\n    const o = props.layoutOptions.layout;\n    return o !== undefined ? typeof o === 'function' ? o(pick) : o : 'MainLayout';\n  }, [props.layoutOptions.layout, pick]);\n  const authorized = useMemo(() => {\n    const o = props.layoutOptions.authorized;\n    return o !== undefined ? typeof o === 'function' ? o(pick) : o : true;\n  }, [props.layoutOptions.authorized, pick]);\n  const permissionName = useMemo(() => {\n    const o = props.layoutOptions.permissionName;\n    return o !== undefined ? typeof o === 'function' ? o(pick) : o : undefined;\n  }, [props.layoutOptions.permissionName, pick]);\n  const modalHeight = useMemo(() => {\n    const o = props.layoutOptions.modalHeight;\n    return o !== undefined ? typeof o === 'function' ? o(pick) : o : 600;\n  }, [props.layoutOptions.modalHeight, pick]);\n  const layoutOptions = useMemo(() => ({\n    title,\n    layout,\n    authorized,\n    permissionName,\n    modalHeight\n  }), [title, layout, authorized, permissionName, modalHeight]); // useEffect(() => {\n  //     if (authorized) {\n  //         dispatch(replace('Login', pathname !== '/' ? btoa(pathname) : ''));\n  //     }\n  // }, [authorized]);\n\n  const Layout = useMemo(() => layout === 'MainLayout' ? MainLayout : React.Fragment, []); // return useMemo(() => (\n  //     (authorized) ? null :\n  //         <Layout layoutOptions={layoutOptions as any}>\n  //             <Component />\n  //         </Layout>\n  // ), [authorized, permissionName]);\n\n  return useMemo(() => React.createElement(Layout, {\n    layoutOptions: layoutOptions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Component, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), []);\n};\n\nexport default Layout;\nexport const setLayoutOptions = (Component, layoutOptions) => {\n  Component.layoutOptions = layoutOptions;\n};","map":{"version":3,"sources":["/Users/metinkara/Documents/Human-Resources-Management/src/layout/Layout.tsx"],"names":["React","useEffect","useMemo","useState","useDispatch","history","MainLayout","Layout","props","Component","dispatch","location","pathname","setPathname","unsubscribe","listen","pick","forCreate","forUpdate","toLowerCase","includes","title","o","layoutOptions","undefined","layout","authorized","permissionName","modalHeight","Fragment","setLayoutOptions"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,OAA3B,EAAoCC,QAApC,QAAoD,OAApD;AAEA,SAASC,WAAT,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,UAAP,MAAuB,cAAvB;;AAiBA,MAAMC,MAAM,GAAIC,KAAD,IAAkB;AAAA,QACrBC,SADqB,GACPD,KADO,CACrBC,SADqB;AAG7B,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAH6B,CAK7B;;AAL6B,oBAOGD,QAAQ,CAACE,OAAO,CAACM,QAAR,CAAiBC,QAAlB,CAPX;AAAA;AAAA,QAOtBA,QAPsB;AAAA,QAOZC,WAPY;;AAS7BZ,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,WAAW,GAAGT,OAAO,CAACU,MAAR,CAAeJ,QAAQ,IAAI;AAC3C;AACAE,MAAAA,WAAW,CAACF,QAAQ,CAACC,QAAV,CAAX;AACH,KAHmB,CAApB;AAIA,WAAO,MAAM;AACTE,MAAAA,WAAW;AACd,KAFD;AAGH,GARQ,EAQN,EARM,CAAT;AAUA,QAAME,IAAI,GAAGd,OAAO,CAAC,MAAM,CAAOe,SAAP,EAAqBC,SAArB,KAAsC;AAC7D,WAAON,QAAQ,CAACO,WAAT,GAAuBC,QAAvB,CAAgC,MAAhC,IAA0CF,SAA1C,GAAsDD,SAA7D;AACH,GAFmB,EAEjB,CAACL,QAAD,CAFiB,CAApB;AAIA,QAAMS,KAAK,GAAGnB,OAAO,CAAC,MAAM;AACxB,UAAMoB,CAAC,GAAGd,KAAK,CAACe,aAAN,CAAoBF,KAA9B;AACA,WAAOC,CAAC,KAAKE,SAAN,GAAmB,OAAOF,CAAP,KAAa,UAAb,GAA0BA,CAAC,CAACN,IAAD,CAA3B,GAAoCM,CAAvD,GAA4D,wBAAnE;AACH,GAHoB,EAGlB,CAACd,KAAK,CAACe,aAAN,CAAoBF,KAArB,EAA4BL,IAA5B,CAHkB,CAArB;AAKA,QAAMS,MAAM,GAAGvB,OAAO,CAAC,MAAM;AACzB,UAAMoB,CAAC,GAAGd,KAAK,CAACe,aAAN,CAAoBE,MAA9B;AACA,WAAOH,CAAC,KAAKE,SAAN,GAAmB,OAAOF,CAAP,KAAa,UAAb,GAA0BA,CAAC,CAACN,IAAD,CAA3B,GAAoCM,CAAvD,GAA4D,YAAnE;AACH,GAHqB,EAGnB,CAACd,KAAK,CAACe,aAAN,CAAoBE,MAArB,EAA6BT,IAA7B,CAHmB,CAAtB;AAKA,QAAMU,UAAU,GAAGxB,OAAO,CAAC,MAAM;AAC7B,UAAMoB,CAAC,GAAGd,KAAK,CAACe,aAAN,CAAoBG,UAA9B;AACA,WAAOJ,CAAC,KAAKE,SAAN,GAAmB,OAAOF,CAAP,KAAa,UAAb,GAA0BA,CAAC,CAACN,IAAD,CAA3B,GAAoCM,CAAvD,GAA4D,IAAnE;AACH,GAHyB,EAGvB,CAACd,KAAK,CAACe,aAAN,CAAoBG,UAArB,EAAiCV,IAAjC,CAHuB,CAA1B;AAKA,QAAMW,cAAc,GAAGzB,OAAO,CAAC,MAAM;AACjC,UAAMoB,CAAC,GAAGd,KAAK,CAACe,aAAN,CAAoBI,cAA9B;AACA,WAAOL,CAAC,KAAKE,SAAN,GAAmB,OAAOF,CAAP,KAAa,UAAb,GAA0BA,CAAC,CAACN,IAAD,CAA3B,GAAoCM,CAAvD,GAA4DE,SAAnE;AACH,GAH6B,EAG3B,CAAChB,KAAK,CAACe,aAAN,CAAoBI,cAArB,EAAqCX,IAArC,CAH2B,CAA9B;AAKA,QAAMY,WAAW,GAAG1B,OAAO,CAAC,MAAM;AAC9B,UAAMoB,CAAC,GAAGd,KAAK,CAACe,aAAN,CAAoBK,WAA9B;AACA,WAAON,CAAC,KAAKE,SAAN,GAAmB,OAAOF,CAAP,KAAa,UAAb,GAA0BA,CAAC,CAACN,IAAD,CAA3B,GAAoCM,CAAvD,GAA4D,GAAnE;AACH,GAH0B,EAGxB,CAACd,KAAK,CAACe,aAAN,CAAoBK,WAArB,EAAkCZ,IAAlC,CAHwB,CAA3B;AAKA,QAAMO,aAAa,GAAGrB,OAAO,CAAC,OAAO;AACjCmB,IAAAA,KADiC;AAEjCI,IAAAA,MAFiC;AAGjCC,IAAAA,UAHiC;AAIjCC,IAAAA,cAJiC;AAKjCC,IAAAA;AALiC,GAAP,CAAD,EAMzB,CAACP,KAAD,EAAQI,MAAR,EAAgBC,UAAhB,EAA4BC,cAA5B,EAA4CC,WAA5C,CANyB,CAA7B,CAhD6B,CAwD7B;AACA;AACA;AACA;AACA;;AAEA,QAAMrB,MAAM,GAAGL,OAAO,CAClB,MACIuB,MAAM,KAAK,YAAX,GACMnB,UADN,GAEMN,KAAK,CAAC6B,QAJE,EAKlB,EALkB,CAAtB,CA9D6B,CAsE7B;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO3B,OAAO,CAAC,MACX,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAEqB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADU,EAIX,EAJW,CAAd;AAKH,CAlFD;;AAoFA,eAAehB,MAAf;AAEA,OAAO,MAAMuB,gBAAgB,GAAG,CAACrB,SAAD,EAAiBc,aAAjB,KAAkD;AAC9Ed,EAAAA,SAAS,CAACc,aAAV,GAA0BA,aAA1B;AACH,CAFM","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\n\nimport { useDispatch, useSelector } from '../config/store';\nimport { history } from '../config/router';\nimport { replace } from '../pages/Services/action';\nimport MainLayout from './MainLayout';\n\ntype Pick<T> = T | ((pick: <C, U>(forCreate: C, forUpdate: U) => C | U) => T);\n\nexport interface LayoutOptions {\n    title?: Pick<string>;\n    layout?: Pick<'MainLayout' | 'AuthLayout' | 'ModalLayout'>;\n    authorized?: Pick<boolean>;\n    permissionName?: Pick<PermissionName | undefined>;\n    modalHeight?: Pick<number>;\n}\n\ninterface Props {\n    layoutOptions?: any;\n    Component: any;\n}\n\nconst Layout = (props: Props) => {\n    const { Component } = props;\n\n    const dispatch = useDispatch();\n\n    //const isLoggedIn = useSelector((state) => state.storage.isLoggedIn);\n\n    const [pathname, setPathname] = useState(history.location.pathname);\n\n    useEffect(() => {\n        const unsubscribe = history.listen(location => {\n            //dispatch(clearAlert());\n            setPathname(location.pathname);\n        });\n        return () => {\n            unsubscribe();\n        };\n    }, []);\n\n    const pick = useMemo(() => <C, U>(forCreate: C, forUpdate: U) => {\n        return pathname.toLowerCase().includes('edit') ? forUpdate : forCreate;\n    }, [pathname]);\n\n    const title = useMemo(() => {\n        const o = props.layoutOptions.title;\n        return o !== undefined ? (typeof o === 'function' ? o(pick) : o) : 'ðŸ’€ - ðŸ’¥ No title here!';\n    }, [props.layoutOptions.title, pick]);\n\n    const layout = useMemo(() => {\n        const o = props.layoutOptions.layout;\n        return o !== undefined ? (typeof o === 'function' ? o(pick) : o) : 'MainLayout';\n    }, [props.layoutOptions.layout, pick]);\n\n    const authorized = useMemo(() => {\n        const o = props.layoutOptions.authorized;\n        return o !== undefined ? (typeof o === 'function' ? o(pick) : o) : true;\n    }, [props.layoutOptions.authorized, pick]);\n\n    const permissionName = useMemo(() => {\n        const o = props.layoutOptions.permissionName;\n        return o !== undefined ? (typeof o === 'function' ? o(pick) : o) : undefined;\n    }, [props.layoutOptions.permissionName, pick]);\n\n    const modalHeight = useMemo(() => {\n        const o = props.layoutOptions.modalHeight;\n        return o !== undefined ? (typeof o === 'function' ? o(pick) : o) : 600;\n    }, [props.layoutOptions.modalHeight, pick]);\n\n    const layoutOptions = useMemo(() => ({\n        title,\n        layout,\n        authorized,\n        permissionName,\n        modalHeight,\n    }), [title, layout, authorized, permissionName, modalHeight]);\n\n    // useEffect(() => {\n    //     if (authorized) {\n    //         dispatch(replace('Login', pathname !== '/' ? btoa(pathname) : ''));\n    //     }\n    // }, [authorized]);\n\n    const Layout = useMemo(\n        () =>\n            layout === 'MainLayout'\n                ? MainLayout\n                : React.Fragment,\n        [],\n    );\n\n    // return useMemo(() => (\n    //     (authorized) ? null :\n    //         <Layout layoutOptions={layoutOptions as any}>\n    //             <Component />\n    //         </Layout>\n    // ), [authorized, permissionName]);\n\n    return useMemo(() => (\n        <Layout layoutOptions={layoutOptions as any}>\n            <Component />\n        </Layout>\n    ), []);\n};\n\nexport default Layout;\n\nexport const setLayoutOptions = (Component: any, layoutOptions: LayoutOptions) => {\n    Component.layoutOptions = layoutOptions;\n};"]},"metadata":{},"sourceType":"module"}