{"ast":null,"code":"import { call, select, put, takeLatest } from 'redux-saga/effects';\nimport { loginApi, registerApi } from './api';\nimport { ActionTypes } from './type';\nimport { registerResult } from './action';\n\nfunction* registerSaga() {\n  const register = yield select(state => state.auth);\n\n  try {\n    yield call(registerApi, register.name, register.email, register.phone, register.password);\n    yield put(registerResult(false));\n  } catch (e) {\n    yield put(registerResult(true));\n  }\n}\n\nfunction* loginSaga() {\n  const _ref = yield select(state => state.auth),\n        email = _ref.email,\n        password = _ref.password;\n\n  try {\n    yield call(loginApi, email, password);\n  } catch (e) {}\n}\n\nexport default [takeLatest(ActionTypes.register, registerSaga), takeLatest(ActionTypes.login, loginSaga)];","map":{"version":3,"sources":["/Users/metinkara/Documents/Human-Resources-Management/src/pages/Auth/logic/saga.ts"],"names":["call","select","put","takeLatest","loginApi","registerApi","ActionTypes","registerResult","registerSaga","register","state","auth","name","email","phone","password","e","loginSaga","login"],"mappings":"AAAA,SAAcA,IAAd,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,oBAAnD;AAEA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAEA,UAAUC,YAAV,GAAyB;AACrB,QAAMC,QAAQ,GAAG,MAAMR,MAAM,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7B;;AAEA,MAAI;AACA,UAAMX,IAAI,CAACK,WAAD,EAAcI,QAAQ,CAACG,IAAvB,EAA6BH,QAAQ,CAACI,KAAtC,EAA6CJ,QAAQ,CAACK,KAAtD,EAA6DL,QAAQ,CAACM,QAAtE,CAAV;AACA,UAAMb,GAAG,CAACK,cAAc,CAAC,KAAD,CAAf,CAAT;AACH,GAHD,CAGE,OAAMS,CAAN,EAAS;AACP,UAAMd,GAAG,CAACK,cAAc,CAAC,IAAD,CAAf,CAAT;AACH;AACJ;;AAED,UAAUU,SAAV,GAAsB;AAAA,eACU,MAAMhB,MAAM,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CADtB;AAAA,QACVE,KADU,QACVA,KADU;AAAA,QACHE,QADG,QACHA,QADG;;AAElB,MAAI;AACA,UAAMf,IAAI,CAACI,QAAD,EAAWS,KAAX,EAAkBE,QAAlB,CAAV;AACH,GAFD,CAEE,OAAMC,CAAN,EAAS,CAEV;AACJ;;AAED,eAAe,CACXb,UAAU,CAACG,WAAW,CAACG,QAAb,EAAuBD,YAAvB,CADC,EAEXL,UAAU,CAACG,WAAW,CAACY,KAAb,EAAoBD,SAApB,CAFC,CAAf","sourcesContent":["import { all, call, select, put, takeLatest } from 'redux-saga/effects';\n\nimport { loginApi, registerApi } from './api';\nimport { ActionTypes } from './type';\nimport { registerResult } from './action';\n\nfunction* registerSaga() {\n    const register = yield select(state => state.auth);\n    \n    try {\n        yield call(registerApi, register.name, register.email, register.phone, register.password);\n        yield put(registerResult(false));\n    } catch(e) {\n        yield put(registerResult(true));\n    }\n}\n\nfunction* loginSaga() {\n    const { email, password } = yield select(state => state.auth);\n    try {\n        yield call(loginApi, email, password);\n    } catch(e) {\n\n    }\n}\n\nexport default [\n    takeLatest(ActionTypes.register, registerSaga),\n    takeLatest(ActionTypes.login, loginSaga),\n]"]},"metadata":{},"sourceType":"module"}