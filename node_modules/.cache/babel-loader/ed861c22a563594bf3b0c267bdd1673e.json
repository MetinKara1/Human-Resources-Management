{"ast":null,"code":"var _jsxFileName = \"/Users/metinkara/Documents/Human-Resources-Management/src/components/TablePagination.tsx\";\nimport React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nconst styles = {\n  main: {\n    border: '1px solid #dddddd',\n    textAlign: 'right',\n    padding: 8,\n    paddingLeft: 0\n  },\n  page: {\n    border: '1px solid #dddddd',\n    padding: 8,\n    cursor: 'pointer'\n  }\n};\n\nconst TablePagination = props => {\n  const currentPage = props.currentPage,\n        pages = props.pages,\n        setPage = props.setPage,\n        pageLimit = props.pageLimit,\n        classes = props.classes;\n  const numPages = Math.ceil(pages / pageLimit);\n\n  const getPaginationNumbers = () => {\n    const blocks = [];\n\n    for (let i = 0; i < numPages; i++) {\n      blocks.push(i);\n    }\n\n    return blocks;\n  };\n\n  const renderPageBlocks = () => {\n    const getPageNumbers = getPaginationNumbers();\n    return getPageNumbers.map(pageNum => React.createElement(\"a\", {\n      key: pageNum,\n      className: classes.page,\n      onClick: () => setPage(pageNum) // style={pageNum === currentPage ? { backgroundColor: 'lightBlue' } : null}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, pageNum));\n  };\n\n  const goToPrevPage = () => {\n    if (currentPage > 0) {\n      setPage(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < numPages - 1) {\n      setPage(currentPage + 1);\n    }\n  };\n\n  const renderPrevPageBlocks = () => {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      key: \"first-page\",\n      className: classes.page,\n      onClick: () => setPage(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"\\xAB\"), React.createElement(\"a\", {\n      key: \"prev-page\",\n      className: classes.page,\n      onClick: goToPrevPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"\\u2190\"));\n  };\n\n  const renderNextPageBlocks = () => {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      key: \"next-page\",\n      className: classes.page,\n      onClick: goToNextPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"\\u2192\"), React.createElement(\"a\", {\n      key: \"last-page\",\n      className: classes.page,\n      onClick: () => setPage(numPages - 1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\\xBB\"));\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, renderPrevPageBlocks(), renderPageBlocks(), renderNextPageBlocks());\n};\n\nexport default withStyles(styles)(TablePagination);","map":{"version":3,"sources":["/Users/metinkara/Documents/Human-Resources-Management/src/components/TablePagination.tsx"],"names":["React","Fragment","withStyles","styles","main","border","textAlign","padding","paddingLeft","page","cursor","TablePagination","props","currentPage","pages","setPage","pageLimit","classes","numPages","Math","ceil","getPaginationNumbers","blocks","i","push","renderPageBlocks","getPageNumbers","map","pageNum","goToPrevPage","goToNextPage","renderPrevPageBlocks","renderNextPageBlocks"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { lightBlue } from '@material-ui/core/colors';\n\nconst styles: any = {\n  main: {\n    border: '1px solid #dddddd',\n    textAlign: 'right',\n    padding: 8,\n    paddingLeft: 0\n  },\n  page: {\n    border: '1px solid #dddddd',\n    padding: 8,\n    cursor: 'pointer'\n  }\n};\n\ninterface Props {\n  currentPage: any;\n  pages: any;\n  setPage: any;\n  pageLimit: any;\n  classes: any;\n}\n\nconst TablePagination = (props: Props) => {\n  const { currentPage, pages, setPage, pageLimit, classes } = props;\n  const numPages = Math.ceil(pages / pageLimit);\n\n  const getPaginationNumbers = () => {\n    const blocks = [];\n    for (let i = 0; i < numPages; i++) {\n      blocks.push(i);\n    }\n    return blocks;\n  };\n  \n  const renderPageBlocks = () => {\n    const getPageNumbers = getPaginationNumbers();\n    return getPageNumbers.map(pageNum =>\n      <a \n        key={pageNum} \n        className={classes.page} \n        onClick={() => setPage(pageNum)}\n        // style={pageNum === currentPage ? { backgroundColor: 'lightBlue' } : null}\n      >\n        {pageNum}\n      </a>\n    );\n  };\n\n  const goToPrevPage = () => {\n    if (currentPage > 0) {\n      setPage(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < numPages - 1) {\n      setPage(currentPage + 1);\n    }\n  };\n\n  const renderPrevPageBlocks = () => {\n    return (\n      <Fragment>\n        <a key=\"first-page\" className={classes.page} onClick={() => setPage(0)}>&#171;</a>\n        <a key=\"prev-page\" className={classes.page} onClick={goToPrevPage}>&#8592;</a>\n      </Fragment>\n    )\n  };\n\n  const renderNextPageBlocks = () => {\n    return (\n      <Fragment>\n        <a key=\"next-page\" className={classes.page} onClick={goToNextPage}>&rarr;</a>\n        <a key=\"last-page\" className={classes.page} onClick={() => setPage(numPages - 1)}>&raquo;</a>\n      </Fragment>\n    )\n  };\n\n  return (\n    <div className={classes.main}>\n      {renderPrevPageBlocks()}\n      {renderPageBlocks()}\n      {renderNextPageBlocks()}\n    </div>\n  );\n}\n\nexport default withStyles(styles)(TablePagination);"]},"metadata":{},"sourceType":"module"}