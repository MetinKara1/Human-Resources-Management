{"ast":null,"code":"import { call, takeLatest } from 'redux-saga/effects';\nimport { candidatesApi } from './api';\nimport { ActionTypes } from './type';\nimport { getCandidatesResult } from './action'; // function* registerSaga() {\n//     const register = yield select(state => state.auth);\n//     try {\n//         yield call(registerApi, register.name, register.email, register.phone, register.password);\n//         yield put(registerResult(false));\n//     } catch(e) {\n//         yield put(registerResult(true));\n//     }\n// }\n\nfunction* candidatesSaga() {\n  console.log('run thisss');\n\n  try {\n    yield call(candidatesApi); // return getCandidatesResult(data, false);\n  } catch (e) {\n    return getCandidatesResult(null, true);\n  }\n}\n\nexport default [// takeLatest(ActionTypes.register, registerSaga),\ntakeLatest(ActionTypes.get_candidates, candidatesSaga)];","map":{"version":3,"sources":["/Users/metinkara/Documents/OltuTesbihWeb/oltu-web/src/pages/Candidates/logic/saga.ts"],"names":["call","takeLatest","candidatesApi","ActionTypes","getCandidatesResult","candidatesSaga","console","log","e","get_candidates"],"mappings":"AAAA,SAAcA,IAAd,EAAiCC,UAAjC,QAAmD,oBAAnD;AAEA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,mBAAT,QAAoC,UAApC,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAUC,cAAV,GAA2B;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,MAAI;AACC,UAAMP,IAAI,CAACE,aAAD,CAAV,CADD,CAEA;AACH,GAHD,CAGE,OAAMM,CAAN,EAAS;AACP,WAAOJ,mBAAmB,CAAC,IAAD,EAAO,IAAP,CAA1B;AACH;AACJ;;AAED,eAAe,CACX;AACAH,UAAU,CAACE,WAAW,CAACM,cAAb,EAA6BJ,cAA7B,CAFC,CAAf","sourcesContent":["import { all, call, select, put, takeLatest } from 'redux-saga/effects';\n\nimport { candidatesApi } from './api';\nimport { ActionTypes } from './type';\nimport { getCandidatesResult } from './action';\n\n// function* registerSaga() {\n//     const register = yield select(state => state.auth);\n    \n//     try {\n//         yield call(registerApi, register.name, register.email, register.phone, register.password);\n//         yield put(registerResult(false));\n//     } catch(e) {\n//         yield put(registerResult(true));\n//     }\n// }\n\nfunction* candidatesSaga() {\n    console.log('run thisss');\n    try {\n         yield call(candidatesApi);\n        // return getCandidatesResult(data, false);\n    } catch(e) {\n        return getCandidatesResult(null, true);\n    }\n}\n\nexport default [\n    // takeLatest(ActionTypes.register, registerSaga),\n    takeLatest(ActionTypes.get_candidates, candidatesSaga),\n]"]},"metadata":{},"sourceType":"module"}