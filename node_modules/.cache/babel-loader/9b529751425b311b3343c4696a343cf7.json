{"ast":null,"code":"import { ActionTypes } from './type';\nimport { history, routes } from '../../config/router';\nexport const navigate = (routeName, ...options) => {\n  console.log('routeName: ', routeName);\n  console.log('options: ', ...options);\n  const path = options.reduce((previousValue, currentValue) => \"/\".concat(currentValue), routes[routeName].path);\n  history.push(path);\n  console.log('path: ', path);\n  return {\n    type: ActionTypes.navigate,\n    routeName\n  };\n};\nexport const replace = (routeName, ...options) => {\n  const path = options.reduce((previousValue, currentValue) => previousValue.concat(\"/\".concat(currentValue)), routes[routeName].path);\n  history.replace(path);\n  return {\n    type: ActionTypes.navigate,\n    routeName\n  };\n};","map":{"version":3,"sources":["/Users/metinkara/Documents/OltuTesbihWeb/oltu-web/src/pages/Services/action.ts"],"names":["ActionTypes","history","routes","navigate","routeName","options","console","log","path","reduce","previousValue","currentValue","push","type","replace","concat"],"mappings":"AAAA,SAAyBA,WAAzB,QAA4C,QAA5C;AACA,SAAoBC,OAApB,EAA6BC,MAA7B,QAA2C,qBAA3C;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,SAAD,EAAuB,GAAGC,OAA1B,KAAgE;AACpFC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,SAA3B;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyB,GAAGF,OAA5B;AACA,QAAMG,IAAI,GAAGH,OAAO,CAACI,MAAR,CAAe,CAACC,aAAD,EAAgBC,YAAhB,gBAAqCA,YAArC,CAAf,EAAoET,MAAM,CAACE,SAAD,CAAN,CAAkBI,IAAtF,CAAb;AACAP,EAAAA,OAAO,CAACW,IAAR,CAAaJ,IAAb;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,IAAtB;AACA,SAAO;AACHK,IAAAA,IAAI,EAAEb,WAAW,CAACG,QADf;AAEHC,IAAAA;AAFG,GAAP;AAIH,CAVM;AAYP,OAAO,MAAMU,OAAO,GAAG,CAACV,SAAD,EAAuB,GAAGC,OAA1B,KAAgE;AACtF,QAAMG,IAAI,GAAGH,OAAO,CAACI,MAAR,CAAe,CAACC,aAAD,EAAgBC,YAAhB,KAAiCD,aAAa,CAACK,MAAd,YAAyBJ,YAAzB,EAAhD,EAA0FT,MAAM,CAACE,SAAD,CAAN,CAAkBI,IAA5G,CAAb;AACAP,EAAAA,OAAO,CAACa,OAAR,CAAgBN,IAAhB;AAEA,SAAO;AACNK,IAAAA,IAAI,EAAEb,WAAW,CAACG,QADZ;AAENC,IAAAA;AAFM,GAAP;AAIA,CARM","sourcesContent":["import { NavigateAction, ActionTypes } from './type';\nimport { RouteName, history, routes } from '../../config/router';\n\nexport const navigate = (routeName: RouteName, ...options: string[]): NavigateAction => {\n    console.log('routeName: ', routeName);\n    console.log('options: ', ...options);\n    const path = options.reduce((previousValue, currentValue) => `/${currentValue}`, routes[routeName].path);\n    history.push(path);\n    console.log('path: ', path);\n    return {\n        type: ActionTypes.navigate,\n        routeName,\n    };\n};\n\nexport const replace = (routeName: RouteName, ...options: string[]): NavigateAction => {\n\tconst path = options.reduce((previousValue, currentValue) => previousValue.concat(`/${currentValue}`), routes[routeName].path);\n\thistory.replace(path);\n\n\treturn {\n\t\ttype: ActionTypes.navigate,\n\t\trouteName,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}