{"ast":null,"code":"import _slicedToArray from \"/Users/metinkara/Documents/Human-Resources-Management/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/metinkara/Documents/Human-Resources-Management/src/pages/Candidates/views/Candidates.tsx\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"../../../config/store\";\nimport { navigate } from \"../../Services/action\"; // import { login, changeEmail, changePassword } from \"../logic/action\";\n\nimport { setLayoutOptions } from \"../../../layout/Layout\";\nimport { getCandidates } from \"../logic/action\";\nimport Table from \"../../../components/Table\";\nimport { STATES_ABBR } from \"../../../config/constant\";\n\nconst Candidates = () => {\n  const dispatch = useDispatch();\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        showLoader = _useState2[0],\n        setLoader = _useState2[1];\n\n  const _useState3 = useState(\"all\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        genreFilter = _useState4[0],\n        setGenreFilter = _useState4[1];\n\n  const _useState5 = useState(\"all\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stateFilter = _useState6[0],\n        setStateFilter = _useState6[1];\n\n  const candidates = useSelector(state => state.candidates.candidates);\n  console.log(\"candidates: \", candidates); //   const onEmailChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changeEmail(e.currentTarget.value));\n  //   }, []);\n  //   const onPasswordChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changePassword(e.currentTarget.value));\n  //   }, []);\n  //   const onLoginClick = useCallback(() => {\n  //     setLoader(true);\n  //     dispatch(login());\n  //   }, []);\n\n  useEffect(() => {\n    console.log(\"çalıoştıı\");\n    dispatch(getCandidates());\n  }, []);\n  const onNavigateRegister = useCallback(() => {\n    dispatch(navigate(\"Register\"));\n  }, []);\n  const tableHeaders = [\"name\", \"username\", \"email\", \"detay\"]; // const renderRow = (data: any) => {\n  //   // console.log(\"data: \", data);\n  //   return (\n  //     <>\n  //       {data &&\n  //         data.length &&\n  //         data.map((item: any) => {\n  //           return (\n  //             <tr key={item.id}>\n  //               <td>{item.name}</td>\n  //               <td>{item.username}</td>\n  //               <td>{item.phone}</td>\n  //               <button\n  //                 type=\"button\"\n  //                 onClick={() => navigate(\"CandidateDetail\", ...[`${item.id}`])}\n  //               >\n  //                 Detay\n  //               </button>\n  //             </tr>\n  //           );\n  //         })}\n  //     </>\n  //   );\n  //   // return <div>test</div>\n  // };\n  // const renderTable = (data: any) => {\n  //   return (\n  //     <table style={{ border: \"1px solid black\" }}>\n  //       <thead>\n  //         <tr style={{ border: \"1px solid black\" }}>\n  //           {tableHeaders.map((item) => (\n  //             <th\n  //               style={{\n  //                 border: \"1px solid black\",\n  //               }}\n  //             >\n  //               {item} <span>Filtre</span>\n  //             </th>\n  //           ))}\n  //         </tr>\n  //       </thead>\n  //       <tbody>{renderRow(data)}</tbody>\n  //     </table>\n  //   );\n  // };\n\n  const generateRow = row => {\n    console.log(\"fielddddd: \", headerOptions.map(field => row[field.id]));\n    return React.createElement(\"tr\", {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, headerOptions.map(field => React.createElement(React.Fragment, null, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, row[field.id]), React.createElement(\"td\", {\n      onClick: () => navigate(\"CandidateDetail\", ...[\"\".concat(row.id)]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"detay\")))));\n  };\n\n  const headerOptions = [{\n    id: \"name\"\n  }, {\n    id: \"username\"\n  }, {\n    id: \"email\",\n    filterOptions: () => renderDropdown(stateFilter, e => setStateFilter(e.target.value), renderStateOptions())\n  }, {\n    id: \"phone\"\n  }, {\n    id: \"detay\",\n    filterOptions: () => renderDropdown(genreFilter, e => setGenreFilter(e.target.value), renderGenreOptions()),\n    onClick: item => navigate(\"CandidateDetail\", ...[\"\".concat(item.id)])\n  }];\n\n  const renderDropdown = (currentVal, changeFunc, options) => {\n    return React.createElement(\"select\", {\n      value: currentVal,\n      onChange: changeFunc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, options.map(option => React.createElement(\"option\", {\n      value: option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, option)));\n  };\n\n  const renderStateOptions = () => [\"all\", ...STATES_ABBR];\n\n  const renderGenreOptions = () => {\n    return candidates.reduce((acc, val) => {\n      const genres = val.genre.split(\",\");\n      return Array.from(new Set([...acc, ...genres]));\n    }, [\"all\"]);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"\",\n    style: {\n      margin: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, \"Candidates\"), React.createElement(Table, {\n    renderRow: row => generateRow(row),\n    entries: candidates,\n    header: headerOptions,\n    placeholder: \"Search by name, city, genre\",\n    textfilterOptions: [\"name\", \"username\", \"email\"],\n    pageLimit: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }), showLoader && React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"loader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }))));\n};\n\nsetLayoutOptions(Candidates, {\n  layout: \"MainLayout\"\n});\nexport default Candidates;","map":{"version":3,"sources":["/Users/metinkara/Documents/Human-Resources-Management/src/pages/Candidates/views/Candidates.tsx"],"names":["React","useCallback","useState","useEffect","useDispatch","useSelector","navigate","setLayoutOptions","getCandidates","Table","STATES_ABBR","Candidates","dispatch","showLoader","setLoader","genreFilter","setGenreFilter","stateFilter","setStateFilter","candidates","state","console","log","onNavigateRegister","tableHeaders","generateRow","row","headerOptions","map","field","id","filterOptions","renderDropdown","e","target","value","renderStateOptions","renderGenreOptions","onClick","item","currentVal","changeFunc","options","option","reduce","acc","val","genres","genre","split","Array","from","Set","margin","layout"],"mappings":"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","sourcesContent":["import React, { useCallback, FormEvent, useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"../../../config/store\";\nimport { navigate } from \"../../Services/action\";\n// import { login, changeEmail, changePassword } from \"../logic/action\";\nimport { setLayoutOptions } from \"../../../layout/Layout\";\nimport { getCandidates } from \"../logic/action\";\nimport Table from \"../../../components/Table\";\nimport { STATES_ABBR } from \"../../../config/constant\";\n\nconst Candidates = () => {\n  const dispatch = useDispatch();\n\n  const [showLoader, setLoader] = useState(false);\n\n  const [genreFilter, setGenreFilter] = useState(\"all\");\n  const [stateFilter, setStateFilter] = useState(\"all\");\n\n  const candidates = useSelector((state) => state.candidates.candidates);\n  console.log(\"candidates: \", candidates);\n  //   const onEmailChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changeEmail(e.currentTarget.value));\n  //   }, []);\n\n  //   const onPasswordChange = useCallback((e: FormEvent<HTMLInputElement>) => {\n  //     dispatch(changePassword(e.currentTarget.value));\n  //   }, []);\n\n  //   const onLoginClick = useCallback(() => {\n  //     setLoader(true);\n  //     dispatch(login());\n  //   }, []);\n\n  useEffect(() => {\n    console.log(\"çalıoştıı\");\n    dispatch(getCandidates());\n  }, []);\n\n  const onNavigateRegister = useCallback(() => {\n    dispatch(navigate(\"Register\"));\n  }, []);\n\n  const tableHeaders = [\"name\", \"username\", \"email\", \"detay\"];\n  // const renderRow = (data: any) => {\n  //   // console.log(\"data: \", data);\n  //   return (\n  //     <>\n  //       {data &&\n  //         data.length &&\n  //         data.map((item: any) => {\n  //           return (\n  //             <tr key={item.id}>\n  //               <td>{item.name}</td>\n  //               <td>{item.username}</td>\n  //               <td>{item.phone}</td>\n  //               <button\n  //                 type=\"button\"\n  //                 onClick={() => navigate(\"CandidateDetail\", ...[`${item.id}`])}\n  //               >\n  //                 Detay\n  //               </button>\n  //             </tr>\n  //           );\n  //         })}\n  //     </>\n  //   );\n  //   // return <div>test</div>\n  // };\n  // const renderTable = (data: any) => {\n  //   return (\n  //     <table style={{ border: \"1px solid black\" }}>\n  //       <thead>\n  //         <tr style={{ border: \"1px solid black\" }}>\n  //           {tableHeaders.map((item) => (\n  //             <th\n  //               style={{\n  //                 border: \"1px solid black\",\n  //               }}\n  //             >\n  //               {item} <span>Filtre</span>\n  //             </th>\n  //           ))}\n  //         </tr>\n  //       </thead>\n  //       <tbody>{renderRow(data)}</tbody>\n  //     </table>\n  //   );\n  // };\n\n  const generateRow = (row: any) => {\n    console.log(\n      \"fielddddd: \",\n      headerOptions.map((field: any) => row[field.id])\n    );\n    return (\n      <tr key={row.id}>\n        {headerOptions.map((field: any) => (\n          <>\n            <td>{row[field.id]}</td>\n            <td onClick={() => navigate(\"CandidateDetail\", ...[`${row.id}`])}>\n              <span>detay</span>\n            </td>\n          </>\n        ))}\n      </tr>\n    );\n  };\n\n  const headerOptions = [\n    {\n      id: \"name\",\n    },\n    {\n      id: \"username\",\n    },\n    {\n      id: \"email\",\n      filterOptions: () =>\n        renderDropdown(\n          stateFilter,\n          (e: any) => setStateFilter(e.target.value),\n          renderStateOptions()\n        ),\n    },\n    {\n      id: \"phone\",\n    },\n    {\n      id: \"detay\",\n      filterOptions: () =>\n        renderDropdown(\n          genreFilter,\n          (e: any) => setGenreFilter(e.target.value),\n          renderGenreOptions()\n        ),\n      onClick: (item: any) => navigate(\"CandidateDetail\", ...[`${item.id}`]),\n    },\n  ];\n\n  const renderDropdown = (currentVal: any, changeFunc: any, options: any) => {\n    return (\n      <select value={currentVal} onChange={changeFunc}>\n        {options.map((option: any) => (\n          <option value={option}>{option}</option>\n        ))}\n      </select>\n    );\n  };\n\n  const renderStateOptions = () => [\"all\", ...STATES_ABBR];\n\n  const renderGenreOptions = () => {\n    return candidates.reduce(\n      (acc: any, val: any) => {\n        const genres = val.genre.split(\",\");\n        return Array.from(new Set([...acc, ...genres]));\n      },\n      [\"all\"]\n    );\n  };\n\n  return (\n    <form className=\"\" style={{ margin: 100 }}>\n      <h2>Candidates</h2>\n\n      {/* <div>{renderTable(candidates)}</div> */}\n\n      <Table\n        renderRow={(row: any) => generateRow(row)}\n        entries={candidates}\n        header={headerOptions}\n        placeholder=\"Search by name, city, genre\"\n        textfilterOptions={[\"name\", \"username\", \"email\"]}\n        pageLimit={10}\n      />\n\n      {showLoader && (\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"loader\"></div>\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nsetLayoutOptions(Candidates, {\n  layout: \"MainLayout\",\n});\nexport default Candidates;\n"]},"metadata":{},"sourceType":"module"}