{"ast":null,"code":"import { call, select, put, takeLatest } from 'redux-saga/effects';\nimport { candidatesApi, candidateDetailApi } from './api';\nimport { ActionTypes } from './type';\nimport { getCandidatesResult } from './action'; // function* registerSaga() {\n//     const register = yield select(state => state.auth);\n//     try {\n//         yield call(registerApi, register.name, register.email, register.phone, register.password);\n//         yield put(registerResult(false));\n//     } catch(e) {\n//         yield put(registerResult(true));\n//     }\n// }\n\nfunction* candidatesSaga() {\n  console.log('run thisss');\n\n  try {\n    const data = yield call(candidatesApi);\n    yield put(getCandidatesResult(data, false));\n  } catch (e) {\n    return getCandidatesResult(null, true);\n  }\n}\n\nfunction* candidateDetailSaga() {\n  console.log('run thisss');\n\n  try {\n    const _ref = yield select(state => state.candidates),\n          id = _ref.id;\n\n    const data = yield call(candidateDetailApi, id);\n    yield put(getCandidatesResult(data, false));\n  } catch (e) {\n    return getCandidatesResult(null, true);\n  }\n}\n\nexport default [// takeLatest(ActionTypes.register, registerSaga),\ntakeLatest(ActionTypes.get_candidates, candidatesSaga)];","map":{"version":3,"sources":["/Users/metinkara/Documents/OltuTesbihWeb/oltu-web/src/pages/Candidates/logic/saga.ts"],"names":["call","select","put","takeLatest","candidatesApi","candidateDetailApi","ActionTypes","getCandidatesResult","candidatesSaga","console","log","data","e","candidateDetailSaga","state","candidates","id","get_candidates"],"mappings":"AAAA,SAAcA,IAAd,EAAoBC,MAApB,EAA4BC,GAA5B,EAAiCC,UAAjC,QAAmD,oBAAnD;AAEA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,OAAlD;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,mBAAT,QAAoC,UAApC,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAUC,cAAV,GAA2B;AACvBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,MAAI;AACC,UAAMC,IAAI,GAAG,MAAMX,IAAI,CAACI,aAAD,CAAvB;AACD,UAAMF,GAAG,CAACK,mBAAmB,CAACI,IAAD,EAAO,KAAP,CAApB,CAAT;AACH,GAHD,CAGE,OAAMC,CAAN,EAAS;AACP,WAAOL,mBAAmB,CAAC,IAAD,EAAO,IAAP,CAA1B;AACH;AACJ;;AAED,UAAUM,mBAAV,GAAgC;AAC5BJ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,MAAI;AAAA,iBACe,MAAMT,MAAM,CAACa,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAD3B;AAAA,UACQC,EADR,QACQA,EADR;;AAEC,UAAML,IAAI,GAAG,MAAMX,IAAI,CAACK,kBAAD,EAAqBW,EAArB,CAAvB;AACD,UAAMd,GAAG,CAACK,mBAAmB,CAACI,IAAD,EAAO,KAAP,CAApB,CAAT;AACH,GAJD,CAIE,OAAMC,CAAN,EAAS;AACP,WAAOL,mBAAmB,CAAC,IAAD,EAAO,IAAP,CAA1B;AACH;AACJ;;AAED,eAAe,CACX;AACAJ,UAAU,CAACG,WAAW,CAACW,cAAb,EAA6BT,cAA7B,CAFC,CAAf","sourcesContent":["import { all, call, select, put, takeLatest } from 'redux-saga/effects';\n\nimport { candidatesApi, candidateDetailApi } from './api';\nimport { ActionTypes } from './type';\nimport { getCandidatesResult } from './action';\n\n// function* registerSaga() {\n//     const register = yield select(state => state.auth);\n    \n//     try {\n//         yield call(registerApi, register.name, register.email, register.phone, register.password);\n//         yield put(registerResult(false));\n//     } catch(e) {\n//         yield put(registerResult(true));\n//     }\n// }\n\nfunction* candidatesSaga() {\n    console.log('run thisss');\n    try {\n         const data = yield call(candidatesApi);\n        yield put(getCandidatesResult(data, false));\n    } catch(e) {\n        return getCandidatesResult(null, true);\n    }\n}\n\nfunction* candidateDetailSaga() {\n    console.log('run thisss');\n    try {\n        const { id } = yield select(state => state.candidates);\n         const data = yield call(candidateDetailApi, id);\n        yield put(getCandidatesResult(data, false));\n    } catch(e) {\n        return getCandidatesResult(null, true);\n    }\n}\n\nexport default [\n    // takeLatest(ActionTypes.register, registerSaga),\n    takeLatest(ActionTypes.get_candidates, candidatesSaga),\n]"]},"metadata":{},"sourceType":"module"}